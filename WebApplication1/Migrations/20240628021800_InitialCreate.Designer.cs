// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WebApplication1.Models;

#nullable disable

namespace WebApplication1.Migrations
{
    [DbContext(typeof(UserScaffoldV2Context))]
    [Migration("20240628021800_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("WebApplication1.Models.MstOffice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Alamat")
                        .HasColumnType("text");

                    b.Property<string>("NameDeptHead")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("MstOffice");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Alamat = "Jogja",
                            NameDeptHead = "Latief"
                        },
                        new
                        {
                            Id = 2,
                            Alamat = "Monjali",
                            NameDeptHead = "Irfan"
                        },
                        new
                        {
                            Id = 3,
                            Alamat = "Doc",
                            NameDeptHead = "Sya"
                        });
                });

            modelBuilder.Entity("WebApplication1.Models.MstProfile", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Alamat")
                        .HasColumnType("text")
                        .HasColumnName("alamat");

                    b.Property<string>("NamaLengkap")
                        .HasColumnType("character varying")
                        .HasColumnName("nama_lengkap");

                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("mst_profile_pk");

                    b.HasIndex(new[] { "UserId" }, "mst_profile_unique")
                        .IsUnique();

                    b.ToTable("mst_profile", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.MstUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Pekerjaan")
                        .HasColumnType("character varying")
                        .HasColumnName("pekerjaan");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("user_name");

                    b.HasKey("Id")
                        .HasName("mst_user_pk");

                    b.HasIndex(new[] { "UserName" }, "mst_user_unique")
                        .IsUnique();

                    b.ToTable("mst_user", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.MstProfile", b =>
                {
                    b.HasOne("WebApplication1.Models.MstUser", "User")
                        .WithOne("MstProfile")
                        .HasForeignKey("WebApplication1.Models.MstProfile", "UserId")
                        .IsRequired()
                        .HasConstraintName("mst_profile_mst_user_fk");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebApplication1.Models.MstUser", b =>
                {
                    b.Navigation("MstProfile");
                });
#pragma warning restore 612, 618
        }
    }
}
